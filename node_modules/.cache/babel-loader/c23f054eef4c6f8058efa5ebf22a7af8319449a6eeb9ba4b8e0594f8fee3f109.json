{"ast":null,"code":"var _jsxFileName = \"/Users/ammarkhan/Desktop/codebase/AKxSalem/src/Create.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport Card from './Card';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const questionRef = useRef();\n  const answerRef = useRef();\n  function handleSubmit() {\n    if (questionRef.current.value === \"\" || answerRef.current.value === \"\") {\n      return;\n    }\n    const updatedQuestions = [...questions, {\n      id: questions.length,\n      question: questionRef.current.value,\n      answer: answerRef.current.value\n    }];\n    // React rerenders/updates everytime setQuestions is called\n    setQuestions(updatedQuestions);\n    // Clear input fields after submission\n    questionRef.current.value = '';\n    answerRef.current.value = '';\n  }\n  const cards = questions.map(item => /*#__PURE__*/_jsxDEV(Card, {\n    question: item.question,\n    answer: item.answer\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this));\n\n  //<button onClick={handleClear}>Clear</button>\n\n  useEffect(() => {\n    const storedQuestions = JSON.parse(localStorage.getItem('questionKey'));\n    if (storedQuestions) setQuestions(storedQuestions);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('questionKey', JSON.stringify(questions));\n  }, [questions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"field\",\n      ref: questionRef,\n      type: \"text\",\n      placeholder: \"Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"field\",\n      ref: answerRef,\n      type: \"text\",\n      placeholder: \"Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-auto\",\n      children: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Create, \"K62uwuGy8pQhd9nIEfJkc6ufGI4=\");\n_c = Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Card","jsxDEV","_jsxDEV","Create","_s","questions","setQuestions","questionRef","answerRef","handleSubmit","current","value","updatedQuestions","id","length","question","answer","cards","map","item","fileName","_jsxFileName","lineNumber","columnNumber","storedQuestions","JSON","parse","localStorage","getItem","setItem","stringify","className","children","ref","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/ammarkhan/Desktop/codebase/AKxSalem/src/Create.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport Card from './Card';\nimport './style.css';\n\nexport default function Create() {\n\n  const [questions, setQuestions] = useState([]);\n\n  const questionRef = useRef();\n  const answerRef = useRef();\n  \n\n  function handleSubmit() {\n    if (questionRef.current.value === \"\" || answerRef.current.value === \"\") {\n      return;\n    }\n    const updatedQuestions = [...questions, { id: questions.length, question: questionRef.current.value, answer: answerRef.current.value }];\n    // React rerenders/updates everytime setQuestions is called\n    setQuestions(updatedQuestions);\n    // Clear input fields after submission\n    questionRef.current.value = '';\n    answerRef.current.value = '';\n  }\n\n  const cards = questions.map(item => (\n    <Card \n      key={item.id}\n      question={item.question}\n      answer={item.answer}\n    />\n  ));\n\n  //<button onClick={handleClear}>Clear</button>\n\n  useEffect(() => {\n    const storedQuestions = JSON.parse(localStorage.getItem('questionKey'))\n    if (storedQuestions) setQuestions(storedQuestions)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('questionKey', JSON.stringify(questions));\n  }, [questions]);\n  return (\n    <div className=\"text-center\">\n      <input className=\"field\" ref={questionRef} type=\"text\" placeholder=\"Question\"></input>\n      <input className=\"field\" ref={answerRef} type=\"text\" placeholder=\"Answer\"></input>\n      <button onClick={handleSubmit}>Submit</button>\n      <div className=\"mx-auto\">\n        {cards}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}