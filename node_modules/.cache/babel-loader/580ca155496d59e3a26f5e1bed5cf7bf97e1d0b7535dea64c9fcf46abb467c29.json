{"ast":null,"code":"var _jsxFileName = \"/home/ak/Desktop/codebase/AKxSalem/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, BrowserRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Card from './Card';\nimport Home from './Home';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const questionRef = useRef();\n  const answerRef = useRef();\n  function getQuestions() {\n    return questions;\n  }\n  function handleClick(e) {\n    if (questionRef.current.value === \"\" || answerRef.current.value === \"\") {\n      return;\n    }\n    const updatedQuestions = [...questions, {\n      id: questions.length,\n      question: questionRef.current.value,\n      answer: answerRef.current.value\n    }];\n    // React rerenders/updates everytime setQuestions is called\n    setQuestions(updatedQuestions);\n    // Clear input fields after submission\n    questionRef.current.value = '';\n    answerRef.current.value = '';\n  }\n  function handleClear(e) {\n    setQuestions([]);\n  }\n  function handlePage(e) {\n    /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this);\n  }\n  const cards = questions.map(item => /*#__PURE__*/_jsxDEV(Card, {\n    question: item.question,\n    answer: item.answer\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this));\n  useEffect(() => {\n    const storedQuestions = JSON.parse(localStorage.getItem('questionKey'));\n    if (storedQuestions) setQuestions(storedQuestions);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('questionKey', JSON.stringify(questions));\n  }, [questions]);\n  useEffect(() => {\n    console.log(questions); // Log the questions array whenever it changes\n  }, [questions]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: questionRef,\n      type: \"text\",\n      placeholder: \"Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: answerRef,\n      type: \"text\",\n      placeholder: \"Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClear,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePage,\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), cards, /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"iQCQFmFGLdcD87WqDMMj4bgnZY0=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","BrowserRouter","Router","Routes","Route","Link","Card","Home","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","questions","setQuestions","questionRef","answerRef","getQuestions","handleClick","e","current","value","updatedQuestions","id","length","question","answer","handleClear","handlePage","fileName","_jsxFileName","lineNumber","columnNumber","cards","map","item","storedQuestions","JSON","parse","localStorage","getItem","setItem","stringify","console","log","children","ref","type","placeholder","onClick","path","element","_c","$RefreshReg$"],"sources":["/home/ak/Desktop/codebase/AKxSalem/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, BrowserRouter }\n    from 'react-router-dom';\nimport { Link } from 'react-router-dom'\nimport Card from './Card'\nimport Home from './Home'\nimport Navbar from './Navbar'\n\nexport default function App() {\n  const [questions, setQuestions] = useState([]);\n\n  const questionRef = useRef();\n  const answerRef = useRef();\n\n  function getQuestions() {\n    return questions;\n  }\n\n  function handleClick(e) {\n    if (questionRef.current.value === \"\" || answerRef.current.value === \"\") {\n      return;\n    }\n    const updatedQuestions = [...questions, { id: questions.length, question: questionRef.current.value, answer: answerRef.current.value }];\n    // React rerenders/updates everytime setQuestions is called\n    setQuestions(updatedQuestions);\n    // Clear input fields after submission\n    questionRef.current.value = '';\n    answerRef.current.value = '';\n  }\n\n  function handleClear(e) {\n    setQuestions([]);\n\n  }\n\n  function handlePage(e) {\n    < Home/>\n  }\n  \n\n  const cards = questions.map(item => (\n    <Card \n      key={item.id}\n      question={item.question}\n      answer={item.answer}\n    />\n  ));\n\n  useEffect(() => {\n    const storedQuestions = JSON.parse(localStorage.getItem('questionKey'))\n    if (storedQuestions) setQuestions(storedQuestions)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('questionKey', JSON.stringify(questions));\n  }, [questions]);\n\n   useEffect(() => {\n     console.log(questions); // Log the questions array whenever it changes\n   }, [questions]);\n\n  return (\n    <>\n      <input ref={questionRef} type=\"text\" placeholder=\"Question\"></input>\n        <input ref={answerRef} type=\"text\" placeholder=\"Answer\"></input>\n        <button onClick={handleClick}>Submit</button>\n        <button onClick={handleClear}>Clear</button>\n        <button onClick={handlePage}>Home</button>\n        {cards}\n      <Router>\n        <Routes>\n          <Route path=\"/\" />\n          <Route path=\"/home\" element={<Home />} />\n        </Routes>\n      </Router>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}