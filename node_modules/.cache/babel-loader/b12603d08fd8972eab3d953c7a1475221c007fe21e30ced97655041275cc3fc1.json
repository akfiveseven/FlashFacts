{"ast":null,"code":"var _jsxFileName = \"/home/ak/Desktop/codebase/newreact/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Card from './Card';\nimport Home from './Home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const questionRef = useRef();\n  const answerRef = useRef();\n  function getQuestions() {\n    return questions;\n  }\n  function handleClick(e) {\n    if (questionRef.current.value == \"\" || answerRef.current.value == \"\") {\n      return;\n    }\n    const updatedQuestions = [...questions, {\n      id: questions.length,\n      question: questionRef.current.value,\n      answer: answerRef.current.value\n    }];\n    // React rerenders/updates everytime setQuestions is called\n    setQuestions(updatedQuestions);\n    // Clear input fields after submission\n    questionRef.current.value = '';\n    answerRef.current.value = '';\n  }\n  function handleClear(e) {\n    setQuestions([]);\n  }\n  function handlePage(e) {\n    /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this);\n  }\n  const cards = questions.map(item => /*#__PURE__*/_jsxDEV(Card, {\n    question: item.question,\n    answer: item.answer\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this));\n  useEffect(() => {\n    const storedQuestions = JSON.parse(localStorage.getItem('questionKey'));\n    if (storedQuestions) setQuestions(storedQuestions);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('questionKey', JSON.stringify(questions));\n  }, [questions]);\n\n  // useEffect(() => {\n  //   console.log(questions); // Log the questions array whenever it changes\n  // }, [questions]);\n\n  // <input ref={questionRef} type=\"text\" placeholder=\"Question\"></input>\n  // <input ref={answerRef} type=\"text\" placeholder=\"Answer\"></input>\n  // <button onClick={handleClick}>Submit</button>\n  // <button onClick={handleClear}>Clear</button>\n  // <button onClick={handlePage}>Home</button>\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [cards, /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"K62uwuGy8pQhd9nIEfJkc6ufGI4=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","BrowserRouter","Router","Routes","Route","Card","Home","jsxDEV","_jsxDEV","App","_s","questions","setQuestions","questionRef","answerRef","getQuestions","handleClick","e","current","value","updatedQuestions","id","length","question","answer","handleClear","handlePage","fileName","_jsxFileName","lineNumber","columnNumber","cards","map","item","storedQuestions","JSON","parse","localStorage","getItem","setItem","stringify","children","exact","path","element","_c","$RefreshReg$"],"sources":["/home/ak/Desktop/codebase/newreact/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route }\n    from 'react-router-dom';\nimport Card from './Card'\nimport Home from './Home'\n\nexport default function App() {\n  const [questions, setQuestions] = useState([]);\n\n  const questionRef = useRef();\n  const answerRef = useRef();\n\n  function getQuestions() {\n    return questions;\n  }\n\n  function handleClick(e) {\n    if (questionRef.current.value == \"\" || answerRef.current.value == \"\") {\n      return;\n    }\n    const updatedQuestions = [...questions, { id: questions.length, question: questionRef.current.value, answer: answerRef.current.value }];\n    // React rerenders/updates everytime setQuestions is called\n    setQuestions(updatedQuestions);\n    // Clear input fields after submission\n    questionRef.current.value = '';\n    answerRef.current.value = '';\n  }\n\n  function handleClear(e) {\n    setQuestions([]);\n\n  }\n\n  function handlePage(e) {\n    < Home/>\n  }\n  \n\n  const cards = questions.map(item => (\n    <Card \n      key={item.id}\n      question={item.question}\n      answer={item.answer}\n    />\n  ));\n\n  useEffect(() => {\n    const storedQuestions = JSON.parse(localStorage.getItem('questionKey'))\n    if (storedQuestions) setQuestions(storedQuestions)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('questionKey', JSON.stringify(questions));\n  }, [questions]);\n\n  // useEffect(() => {\n  //   console.log(questions); // Log the questions array whenever it changes\n  // }, [questions]);\n\n      // <input ref={questionRef} type=\"text\" placeholder=\"Question\"></input>\n      // <input ref={answerRef} type=\"text\" placeholder=\"Answer\"></input>\n      // <button onClick={handleClick}>Submit</button>\n      // <button onClick={handleClear}>Clear</button>\n      // <button onClick={handlePage}>Home</button>\n  return (\n    <Router> \n      {cards}\n      <Routes>\n        <Route exact path='/' element={<App />} />\n        <Route path='/home' element={<Home />} />\n      </Routes>\n    </Router>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}