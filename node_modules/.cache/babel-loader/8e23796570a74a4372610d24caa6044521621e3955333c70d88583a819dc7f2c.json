{"ast":null,"code":"var _jsxFileName = \"/home/ak/Desktop/codebase/newreact/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, BrowserRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Card from './Card';\nimport Home from './Home';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const questionRef = useRef();\n  const answerRef = useRef();\n  function getQuestions() {\n    return questions;\n  }\n  function handleClick(e) {\n    if (questionRef.current.value === \"\" || answerRef.current.value === \"\") {\n      return;\n    }\n    const updatedQuestions = [...questions, {\n      id: questions.length,\n      question: questionRef.current.value,\n      answer: answerRef.current.value\n    }];\n    // React rerenders/updates everytime setQuestions is called\n    setQuestions(updatedQuestions);\n    // Clear input fields after submission\n    questionRef.current.value = '';\n    answerRef.current.value = '';\n  }\n  function handleClear(e) {\n    setQuestions([]);\n  }\n  function handlePage(e) {\n    /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this);\n  }\n  const cards = questions.map(item => /*#__PURE__*/_jsxDEV(Card, {\n    question: item.question,\n    answer: item.answer\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this));\n  useEffect(() => {\n    const storedQuestions = JSON.parse(localStorage.getItem('questionKey'));\n    if (storedQuestions) setQuestions(storedQuestions);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('questionKey', JSON.stringify(questions));\n  }, [questions]);\n\n  // useEffect(() => {\n  //   console.log(questions); // Log the questions array whenever it changes\n  // }, [questions]);\n  // <input ref={questionRef} type=\"text\" placeholder=\"Question\"></input>\n  // <input ref={answerRef} type=\"text\" placeholder=\"Answer\"></input>\n  // <button onClick={handleClick}>Submit</button>\n  // <button onClick={handleClear}>Clear</button>\n  // <button onClick={handlePage}>Home</button>\n  // {cards}\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      exact: true,\n      element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/home\",\n      element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"K62uwuGy8pQhd9nIEfJkc6ufGI4=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","BrowserRouter","Router","Routes","Route","Link","Card","Home","Navbar","jsxDEV","_jsxDEV","App","_s","questions","setQuestions","questionRef","answerRef","getQuestions","handleClick","e","current","value","updatedQuestions","id","length","question","answer","handleClear","handlePage","fileName","_jsxFileName","lineNumber","columnNumber","cards","map","item","storedQuestions","JSON","parse","localStorage","getItem","setItem","stringify","children","path","exact","element","_c","$RefreshReg$"],"sources":["/home/ak/Desktop/codebase/newreact/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, BrowserRouter }\n    from 'react-router-dom';\nimport { Link } from 'react-router-dom'\nimport Card from './Card'\nimport Home from './Home'\nimport Navbar from './Navbar'\n\nexport default function App() {\n  const [questions, setQuestions] = useState([]);\n\n  const questionRef = useRef();\n  const answerRef = useRef();\n\n  function getQuestions() {\n    return questions;\n  }\n\n  function handleClick(e) {\n    if (questionRef.current.value === \"\" || answerRef.current.value === \"\") {\n      return;\n    }\n    const updatedQuestions = [...questions, { id: questions.length, question: questionRef.current.value, answer: answerRef.current.value }];\n    // React rerenders/updates everytime setQuestions is called\n    setQuestions(updatedQuestions);\n    // Clear input fields after submission\n    questionRef.current.value = '';\n    answerRef.current.value = '';\n  }\n\n  function handleClear(e) {\n    setQuestions([]);\n\n  }\n\n  function handlePage(e) {\n    < Home/>\n  }\n  \n\n  const cards = questions.map(item => (\n    <Card \n      key={item.id}\n      question={item.question}\n      answer={item.answer}\n    />\n  ));\n\n  useEffect(() => {\n    const storedQuestions = JSON.parse(localStorage.getItem('questionKey'))\n    if (storedQuestions) setQuestions(storedQuestions)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('questionKey', JSON.stringify(questions));\n  }, [questions]);\n\n  // useEffect(() => {\n  //   console.log(questions); // Log the questions array whenever it changes\n  // }, [questions]);\n      // <input ref={questionRef} type=\"text\" placeholder=\"Question\"></input>\n      // <input ref={answerRef} type=\"text\" placeholder=\"Answer\"></input>\n      // <button onClick={handleClick}>Submit</button>\n      // <button onClick={handleClear}>Clear</button>\n      // <button onClick={handlePage}>Home</button>\n      // {cards}\n\n  return (\n    <BrowserRouter>\n      <Route path=\"/\" exact element={<App />} />\n      <Route path=\"/home\" element={<Home />} />\n      <Navbar />\n      \n    </BrowserRouter>\n\n\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}