{"ast":null,"code":"var _jsxFileName = \"/Users/ammarkhan/Desktop/codebase/AKxSalem/src/Create.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport Card from './Card';\nimport CardList from './CardList';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const questionRef = useRef();\n  const answerRef = useRef();\n  function handleSubmit() {\n    if (questionRef.current.value === \"\" || answerRef.current.value === \"\") {\n      return;\n    }\n    if (questionRef.current.value.length >= 161 || answerRef.current.value.length >= 161) {\n      alert(\"Question or Answer is too long (Cannot be greater than 160 characters)\");\n      return;\n    }\n    const updatedQuestions = [...questions, {\n      id: questions.length,\n      question: questionRef.current.value,\n      answer: answerRef.current.value\n    }];\n    // React rerenders/updates everytime setQuestions is called\n    setQuestions(updatedQuestions);\n    // Clear input fields after submission\n    questionRef.current.value = '';\n    answerRef.current.value = '';\n  }\n  function handleClear() {\n    setQuestions([]);\n  }\n\n  //<button onClick={handleClear}>Clear</button>\n\n  useEffect(() => {\n    const storedQuestions = JSON.parse(localStorage.getItem('questionKey'));\n    if (storedQuestions) setQuestions(storedQuestions);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('questionKey', JSON.stringify(questions));\n  }, [questions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thing text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"field form-control\",\n      ref: questionRef,\n      type: \"text\",\n      placeholder: \"Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"field form-control\",\n      ref: answerRef,\n      type: \"text\",\n      placeholder: \"Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bob1 btn btn-light\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bob2 btn btn-light\",\n      onClick: handleClear,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardy\",\n      children: /*#__PURE__*/_jsxDEV(CardList, {\n        questions: questions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Create, \"K62uwuGy8pQhd9nIEfJkc6ufGI4=\");\n_c = Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Card","CardList","jsxDEV","_jsxDEV","Create","_s","questions","setQuestions","questionRef","answerRef","handleSubmit","current","value","length","alert","updatedQuestions","id","question","answer","handleClear","storedQuestions","JSON","parse","localStorage","getItem","setItem","stringify","className","children","ref","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ammarkhan/Desktop/codebase/AKxSalem/src/Create.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport Card from './Card';\nimport CardList from './CardList'\nimport './style.css';\n\nexport default function Create() {\n\n  const [questions, setQuestions] = useState([]);\n\n  const questionRef = useRef();\n  const answerRef = useRef();\n  \n\n  function handleSubmit() {\n    if (questionRef.current.value === \"\" || answerRef.current.value === \"\") {\n      return;\n    }\n\n    if (questionRef.current.value.length >= 161 || answerRef.current.value.length >= 161) {\n      alert(\"Question or Answer is too long (Cannot be greater than 160 characters)\")\n      return;\n    }\n\n    const updatedQuestions = [...questions, { id: questions.length, question: questionRef.current.value, answer: answerRef.current.value }];\n    // React rerenders/updates everytime setQuestions is called\n    setQuestions(updatedQuestions);\n    // Clear input fields after submission\n    questionRef.current.value = '';\n    answerRef.current.value = '';\n  }\n\n  function handleClear() {\n    setQuestions([]);\n  }\n\n\n  //<button onClick={handleClear}>Clear</button>\n\n  useEffect(() => {\n    const storedQuestions = JSON.parse(localStorage.getItem('questionKey'))\n    if (storedQuestions) setQuestions(storedQuestions)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('questionKey', JSON.stringify(questions));\n  }, [questions]);\n  return (\n    <div className=\"thing text-center\">\n      <input className=\"field form-control\" ref={questionRef} type=\"text\" placeholder=\"Question\"></input>\n      <input className=\"field form-control\" ref={answerRef} type=\"text\" placeholder=\"Answer\"></input>\n      <button className=\"bob1 btn btn-light\" onClick={handleSubmit}>Submit</button>\n      <button className=\"bob2 btn btn-light\" onClick={handleClear}>Clear</button>\n      <div className=\"cardy\">\n        <CardList questions={questions} />\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}