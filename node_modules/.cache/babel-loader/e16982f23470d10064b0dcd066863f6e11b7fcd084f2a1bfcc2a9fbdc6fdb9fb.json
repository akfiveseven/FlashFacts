{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akhan\\\\Desktop\\\\codebase\\\\AKxSalem\\\\src\\\\Select.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './style.css';\nimport CardList from './CardList';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Select() {\n  _s();\n  const sets = JSON.parse(localStorage.getItem('flashcardSets')) || [];\n  const [selectedOption, setSelectedOption] = useState('');\n  const [showResult, setShowResult] = useState(false); // State variable to control rendering\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n  const [viewAll, setViewAll] = useState(false);\n  const handleChange = event => {\n    setSelectedOption(event.target.value);\n    setShowResult(false); // Reset the showResult state when the option changes\n    setCurrentCardIndex(0); // Reset the current card index when the option changes\n  };\n\n  const handleViewSet = () => {\n    const selectedSet = sets.find(set => set.name === selectedOption);\n    if (selectedSet) {\n      const cards = selectedSet.cards;\n      const currentCard = cards[currentCardIndex];\n      const handleNext = () => {\n        setCurrentCardIndex(prevIndex => prevIndex === cards.length - 1 ? 0 : prevIndex + 1);\n      };\n      const handlePrev = () => {\n        setCurrentCardIndex(prevIndex => prevIndex === 0 ? cards.length - 1 : prevIndex - 1);\n      };\n      if (viewAll) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(CardList, {\n            questions: cards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePrev,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNext,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `Card ${currentCardIndex + 1} / ${cards.length}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            question: currentCard.question,\n            answer: currentCard.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePrev,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNext,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `Card ${currentCardIndex + 1} / ${cards.length}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this);\n      }\n    } else {\n      return null;\n    }\n  };\n  const handleClick = () => {\n    setShowResult(true); // Set showResult to true when the button is clicked\n  };\n\n  const handleToggleView = () => {\n    setViewAll(!viewAll);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedOption,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select an option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), sets.map(set => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: set.name,\n        children: set.name\n      }, set.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-light\",\n      onClick: handleClick,\n      children: \"Show Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-light\",\n      onClick: handleClear,\n      children: \"Clear All Sets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-light\",\n      onClick: handleToggleView,\n      children: viewAll ? 'View Single File' : 'View All Cards'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), showResult && handleViewSet()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(Select, \"mzkHWjMPE42OosEEcUkkmZGhmTs=\");\n_c = Select;\nvar _c;\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"names":["React","useState","Link","CardList","Card","jsxDEV","_jsxDEV","Select","_s","sets","JSON","parse","localStorage","getItem","selectedOption","setSelectedOption","showResult","setShowResult","currentCardIndex","setCurrentCardIndex","viewAll","setViewAll","handleChange","event","target","value","handleViewSet","selectedSet","find","set","name","cards","currentCard","handleNext","prevIndex","length","handlePrev","children","questions","fileName","_jsxFileName","lineNumber","columnNumber","onClick","question","answer","handleClick","handleToggleView","onChange","map","id","className","handleClear","_c","$RefreshReg$"],"sources":["C:/Users/akhan/Desktop/codebase/AKxSalem/src/Select.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport CardList from './CardList';\r\nimport Card from './Card';\r\n\r\nexport default function Select() {\r\n  const sets = JSON.parse(localStorage.getItem('flashcardSets')) || [];\r\n\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n  const [showResult, setShowResult] = useState(false); // State variable to control rendering\r\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\r\n  const [viewAll, setViewAll] = useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedOption(event.target.value);\r\n    setShowResult(false); // Reset the showResult state when the option changes\r\n    setCurrentCardIndex(0); // Reset the current card index when the option changes\r\n  };\r\n\r\n  const handleViewSet = () => {\r\n    const selectedSet = sets.find((set) => set.name === selectedOption);\r\n\r\n    if (selectedSet) {\r\n      const cards = selectedSet.cards;\r\n      const currentCard = cards[currentCardIndex];\r\n\r\n      const handleNext = () => {\r\n        setCurrentCardIndex((prevIndex) =>\r\n          prevIndex === cards.length - 1 ? 0 : prevIndex + 1\r\n        );\r\n      };\r\n\r\n      const handlePrev = () => {\r\n        setCurrentCardIndex((prevIndex) =>\r\n          prevIndex === 0 ? cards.length - 1 : prevIndex - 1\r\n        );\r\n      };\r\n\r\n      if (viewAll) {\r\n        return (\r\n          <div>\r\n            <CardList questions={cards} />\r\n            <button onClick={handlePrev}>Previous</button>\r\n            <button onClick={handleNext}>Next</button>\r\n            <p>{`Card ${currentCardIndex + 1} / ${cards.length}`}</p>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div>\r\n            <Card question={currentCard.question} answer={currentCard.answer} />\r\n            <button onClick={handlePrev}>Previous</button>\r\n            <button onClick={handleNext}>Next</button>\r\n            <p>{`Card ${currentCardIndex + 1} / ${cards.length}`}</p>\r\n          </div>\r\n        );\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setShowResult(true); // Set showResult to true when the button is clicked\r\n  };\r\n\r\n  const handleToggleView = () => {\r\n    setViewAll(!viewAll);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <select value={selectedOption} onChange={handleChange}>\r\n        <option value=\"\">Select an option</option>\r\n        {sets.map((set) => (\r\n          <option key={set.id} value={set.name}>\r\n            {set.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <button className=\"btn btn-light\" onClick={handleClick}>\r\n        Show Result\r\n      </button>\r\n      <button className=\"btn btn-light\" onClick={handleClear}>\r\n        Clear All Sets\r\n      </button>\r\n      <button className=\"btn btn-light\" onClick={handleToggleView}>\r\n        {viewAll ? 'View Single File' : 'View All Cards'}\r\n      </button>\r\n\r\n      {showResult && handleViewSet()}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}