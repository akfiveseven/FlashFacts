{"ast":null,"code":"var _jsxFileName = \"/home/ak/Desktop/codebase/newreact/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport CardData from './CardData';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  let x = new CardData();\n  x.pushToArray(\"q\", \"answer\");\n  const [questions, setQuestions] = useState(x.arrayOfMaps);\n  var cards = x.arrayOfMaps.map(item => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      question: item.question,\n      answer: item.answer\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  });\n  const questionRef = useRef();\n  const answerRef = useRef();\n  function handleClick(e) {\n    // console.log(\"Question: \" + questionRef.current.value)\n    // console.log(\"Answer: \" + answerRef.current.value)\n    // questions.push(questionRef.current.value);\n    x.pushToArray(questionRef.current.value, answerRef.current.value);\n    //x.clearArray();\n    console.log(x.arrayOfMaps);\n    setQuestions(x.arrayOfMaps);\n    return {\n      cards\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: questionRef,\n      type: \"text\",\n      placeholder: \"Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: answerRef,\n      type: \"text\",\n      placeholder: \"Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), cards]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jchdtzv2mq0SGMtksRAZ8pIGDGw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","CardData","Card","jsxDEV","_jsxDEV","App","_s","x","pushToArray","questions","setQuestions","arrayOfMaps","cards","map","item","question","answer","id","fileName","_jsxFileName","lineNumber","columnNumber","questionRef","answerRef","handleClick","e","current","value","console","log","children","ref","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/ak/Desktop/codebase/newreact/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport CardData from './CardData'\nimport Card from './Card'\n\n\n\nexport default function App() {\n  let x = new CardData();\n\n  x.pushToArray(\"q\", \"answer\")\n  const [questions, setQuestions] = useState(x.arrayOfMaps);\n\n  var cards = x.arrayOfMaps.map(item => {\n    return (\n      <Card \n          key={item.id}\n          question={item.question}\n          answer={item.answer}\n      />\n    )\n  })\n\n  const questionRef = useRef();\n  const answerRef = useRef();\n\n  function handleClick(e) {\n    // console.log(\"Question: \" + questionRef.current.value)\n    // console.log(\"Answer: \" + answerRef.current.value)\n    // questions.push(questionRef.current.value);\n    x.pushToArray(questionRef.current.value, answerRef.current.value)\n    //x.clearArray();\n    console.log(x.arrayOfMaps);\n    setQuestions(x.arrayOfMaps);\n\n    return {cards}\n  }\n\n  return (\n    <div>\n      <input ref={questionRef} type=\"text\" placeholder=\"Question\"></input>\n      <input ref={answerRef} type=\"text\" placeholder=\"Answer\"></input>\n      <button onClick={handleClick}>Submit</button>\n      {cards}\n    </div>\n  )\n}\n  \n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,IAAI,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIzB,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,IAAIC,CAAC,GAAG,IAAIN,QAAQ,CAAC,CAAC;EAEtBM,CAAC,CAACC,WAAW,CAAC,GAAG,EAAE,QAAQ,CAAC;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAACQ,CAAC,CAACI,WAAW,CAAC;EAEzD,IAAIC,KAAK,GAAGL,CAAC,CAACI,WAAW,CAACE,GAAG,CAACC,IAAI,IAAI;IACpC,oBACEV,OAAA,CAACF,IAAI;MAEDa,QAAQ,EAAED,IAAI,CAACC,QAAS;MACxBC,MAAM,EAAEF,IAAI,CAACE;IAAO,GAFfF,IAAI,CAACG,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGf,CAAC;EAEN,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAGtB,MAAM,CAAC,CAAC;EAC5B,MAAMuB,SAAS,GAAGvB,MAAM,CAAC,CAAC;EAE1B,SAASwB,WAAWA,CAACC,CAAC,EAAE;IACtB;IACA;IACA;IACAlB,CAAC,CAACC,WAAW,CAACc,WAAW,CAACI,OAAO,CAACC,KAAK,EAAEJ,SAAS,CAACG,OAAO,CAACC,KAAK,CAAC;IACjE;IACAC,OAAO,CAACC,GAAG,CAACtB,CAAC,CAACI,WAAW,CAAC;IAC1BD,YAAY,CAACH,CAAC,CAACI,WAAW,CAAC;IAE3B,OAAO;MAACC;IAAK,CAAC;EAChB;EAEA,oBACER,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAO2B,GAAG,EAAET,WAAY;MAACU,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC;IAAU;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpEjB,OAAA;MAAO2B,GAAG,EAAER,SAAU;MAACS,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC;IAAQ;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChEjB,OAAA;MAAQ8B,OAAO,EAAEV,WAAY;MAAAM,QAAA,EAAC;IAAM;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC5CT,KAAK;EAAA;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACf,EAAA,CAvCuBD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}