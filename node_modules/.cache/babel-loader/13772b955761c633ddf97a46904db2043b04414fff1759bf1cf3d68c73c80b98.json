{"ast":null,"code":"import _toConsumableArray from\"C:/Users/akhan/Desktop/codebase/AKxSalem/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/akhan/Desktop/codebase/AKxSalem/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useRef,useEffect}from'react';import Card from'./Card';import CardList from'./CardList';import'./style.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Create(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),questions=_useState2[0],setQuestions=_useState2[1];var questionRef=useRef();var answerRef=useRef();var nameRef=useRef();function handleSubmit(){if(questionRef.current.value===\"\"||answerRef.current.value===\"\"){return;}if(questionRef.current.value.length>=161||answerRef.current.value.length>=161){alert(\"Question or Answer is too long (Cannot be greater than 160 characters)\");return;}var updatedQuestions=[].concat(_toConsumableArray(questions),[{id:questions.length,question:questionRef.current.value,answer:answerRef.current.value}]);// React rerenders/updates everytime setQuestions is called\nsetQuestions(updatedQuestions);// Clear input fields after submission\nquestionRef.current.value='';answerRef.current.value='';}function handleClear(){localStorage.clear();setQuestions([]);}function handleSave(){if(questions.length===0){alert(\"No flashcards to save.\");return;}var sets=JSON.parse(localStorage.getItem('flashcardSets'))||[];// getting sets data in local storage\nvar selectedSet=sets.find(function(set){return set.name===nameRef.current.value;});if(selectedSet){alert(\"Set name has already been saved.\");return;}if(nameRef.current.value===\"\"){alert(\"EMPTY SET NAME\");return;}var flashcardSet={id:new Date().getTime(),// Generate a unique ID for the flashcard set\ncards:questions,// Save the current list of questions as cards in the set\nname:nameRef.current.value};// Save the flashcard set to local storage\n// LOAD\nvar savedSets=JSON.parse(localStorage.getItem('flashcardSets'))||[];// getting sets data in local storage\nsavedSets.push(flashcardSet);localStorage.setItem('flashcardSets',JSON.stringify(savedSets));// Clear the questions\nsetQuestions([]);nameRef.current.value='';alert(\"Flashcard set saved successfully!\");}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"viewbtn\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"viewbody\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Create Flashcard Set\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"thing text-center\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"field form-control\",ref:nameRef,type:\"text\",placeholder:\"Set Name\"}),/*#__PURE__*/_jsx(\"input\",{className:\"field form-control\",ref:questionRef,type:\"text\",placeholder:\"Question\"}),/*#__PURE__*/_jsx(\"input\",{className:\"field form-control\",ref:answerRef,type:\"text\",placeholder:\"Answer\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-light\",onClick:handleSubmit,children:\"Submit Card\"}),/*#__PURE__*/_jsx(\"button\",{className:\"createButtonStyle btn btn-light\",onClick:handleSave,children:\"Save Set\"}),/*#__PURE__*/_jsx(CardList,{questions:questions})]})]})});}","map":{"version":3,"names":["React","useState","useRef","useEffect","Card","CardList","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Create","_useState","_useState2","_slicedToArray","questions","setQuestions","questionRef","answerRef","nameRef","handleSubmit","current","value","length","alert","updatedQuestions","concat","_toConsumableArray","id","question","answer","handleClear","localStorage","clear","handleSave","sets","JSON","parse","getItem","selectedSet","find","set","name","flashcardSet","Date","getTime","cards","savedSets","push","setItem","stringify","children","className","ref","type","placeholder","onClick"],"sources":["C:/Users/akhan/Desktop/codebase/AKxSalem/src/Create.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport Card from './Card';\r\nimport CardList from './CardList'\r\nimport './style.css';\r\n\r\nexport default function Create() {\r\n\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  const questionRef = useRef();\r\n  const answerRef = useRef();\r\n  const nameRef = useRef();\r\n\r\n  \r\n\r\n  function handleSubmit() {\r\n    if (questionRef.current.value === \"\" || answerRef.current.value === \"\") {\r\n      return;\r\n    }\r\n\r\n    if (questionRef.current.value.length >= 161 || answerRef.current.value.length >= 161) {\r\n      alert(\"Question or Answer is too long (Cannot be greater than 160 characters)\")\r\n      return;\r\n    }\r\n\r\n    const updatedQuestions = [...questions, { id: questions.length, question: questionRef.current.value, answer: answerRef.current.value }];\r\n    // React rerenders/updates everytime setQuestions is called\r\n    setQuestions(updatedQuestions);\r\n    // Clear input fields after submission\r\n    questionRef.current.value = '';\r\n    answerRef.current.value = '';\r\n  }\r\n\r\n  function handleClear() {\r\n    localStorage.clear(); \r\n    setQuestions([]);\r\n  }\r\n\r\n  function handleSave() {\r\n    if (questions.length === 0) {\r\n      alert(\"No flashcards to save.\");\r\n      return;\r\n    }\r\n\r\n    const sets = JSON.parse(localStorage.getItem('flashcardSets')) || []; // getting sets data in local storage\r\n    const selectedSet = sets.find((set) => set.name === nameRef.current.value);\r\n\r\n    if (selectedSet) {\r\n      alert(\"Set name has already been saved.\")\r\n      return;\r\n    }\r\n\r\n\r\n    if (nameRef.current.value === \"\") {\r\n      alert(\"EMPTY SET NAME\");\r\n      return;\r\n    }\r\n  \r\n    const flashcardSet = {\r\n      id: new Date().getTime(), // Generate a unique ID for the flashcard set\r\n      cards: questions, // Save the current list of questions as cards in the set\r\n      name: nameRef.current.value\r\n    };\r\n  \r\n    // Save the flashcard set to local storage\r\n\r\n    // LOAD\r\n    const savedSets = JSON.parse(localStorage.getItem('flashcardSets')) || []; // getting sets data in local storage\r\n\r\n    savedSets.push(flashcardSet);\r\n    localStorage.setItem('flashcardSets', JSON.stringify(savedSets));\r\n  \r\n    // Clear the questions\r\n    setQuestions([]);\r\n    nameRef.current.value = '';\r\n    alert(\"Flashcard set saved successfully!\");\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"viewbtn\">\r\n        <div className=\"viewbody\">\r\n          <h1>Create Flashcard Set</h1>\r\n        </div>\r\n        <div className=\"thing text-center\">\r\n          <input className=\"field form-control\" ref={nameRef} type=\"text\" placeholder=\"Set Name\"></input>\r\n          <input className=\"field form-control\" ref={questionRef} type=\"text\" placeholder=\"Question\"></input>\r\n          <input className=\"field form-control\" ref={answerRef} type=\"text\" placeholder=\"Answer\"></input>\r\n          <button className=\"btn btn-light\" onClick={handleSubmit}>Submit Card</button>\r\n          <button className=\"createButtonStyle btn btn-light\" onClick={handleSave}>Save Set</button>\r\n          <CardList questions={questions} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}