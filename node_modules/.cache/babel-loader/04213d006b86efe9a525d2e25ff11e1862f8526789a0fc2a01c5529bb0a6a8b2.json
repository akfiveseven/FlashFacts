{"ast":null,"code":"var _jsxFileName = \"/home/ak/Desktop/codebase/newreact/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const cards = questions.map(item => /*#__PURE__*/_jsxDEV(Card, {\n    question: item.question,\n    answer: item.answer\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this));\n  const questionRef = useRef();\n  const answerRef = useRef();\n  function handleClick(e) {\n    const updatedQuestions = [...questions, {\n      question: questionRef.current.value,\n      answer: answerRef.current.value\n    }];\n    console.log(\"test: \" + updatedQuestions);\n    setQuestions(updatedQuestions);\n\n    // Clear input fields after submission\n    questionRef.current.value = '';\n    answerRef.current.value = '';\n  }\n  useEffect(() => {\n    console.log(questions); // Log the questions array whenever it changes\n  }, [questions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: questionRef,\n      type: \"text\",\n      placeholder: \"Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: answerRef,\n      type: \"text\",\n      placeholder: \"Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), cards]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"I9lJMoJF+senIOJezfIpIz3kpwY=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Card","jsxDEV","_jsxDEV","App","_s","questions","setQuestions","cards","map","item","question","answer","id","fileName","_jsxFileName","lineNumber","columnNumber","questionRef","answerRef","handleClick","e","updatedQuestions","current","value","console","log","children","ref","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/ak/Desktop/codebase/newreact/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport Card from './Card'\n\nexport default function App() {\n  const [questions, setQuestions] = useState([]);\n\n  const cards = questions.map(item => (\n    <Card \n      key={item.id}\n      question={item.question}\n      answer={item.answer}\n    />\n  ));\n\n\n  const questionRef = useRef();\n  const answerRef = useRef();\n\n  function handleClick(e) {\n    const updatedQuestions = [...questions, { question: questionRef.current.value, answer: answerRef.current.value }];\n    console.log(\"test: \" + updatedQuestions);\n    setQuestions(updatedQuestions);\n\n    // Clear input fields after submission\n    questionRef.current.value = '';\n    answerRef.current.value = '';\n  }\n\n  useEffect(() => {\n    console.log(questions); // Log the questions array whenever it changes\n  }, [questions]);\n\n  return (\n    <div>\n      <input ref={questionRef} type=\"text\" placeholder=\"Question\"></input>\n      <input ref={answerRef} type=\"text\" placeholder=\"Answer\"></input>\n      <button onClick={handleClick}>Submit</button>\n      {cards}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,IAAI,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMS,KAAK,GAAGF,SAAS,CAACG,GAAG,CAACC,IAAI,iBAC9BP,OAAA,CAACF,IAAI;IAEHU,QAAQ,EAAED,IAAI,CAACC,QAAS;IACxBC,MAAM,EAAEF,IAAI,CAACE;EAAO,GAFfF,IAAI,CAACG,EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGb,CACF,CAAC;EAGF,MAAMC,WAAW,GAAGlB,MAAM,CAAC,CAAC;EAC5B,MAAMmB,SAAS,GAAGnB,MAAM,CAAC,CAAC;EAE1B,SAASoB,WAAWA,CAACC,CAAC,EAAE;IACtB,MAAMC,gBAAgB,GAAG,CAAC,GAAGhB,SAAS,EAAE;MAAEK,QAAQ,EAAEO,WAAW,CAACK,OAAO,CAACC,KAAK;MAAEZ,MAAM,EAAEO,SAAS,CAACI,OAAO,CAACC;IAAM,CAAC,CAAC;IACjHC,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGJ,gBAAgB,CAAC;IACxCf,YAAY,CAACe,gBAAgB,CAAC;;IAE9B;IACAJ,WAAW,CAACK,OAAO,CAACC,KAAK,GAAG,EAAE;IAC9BL,SAAS,CAACI,OAAO,CAACC,KAAK,GAAG,EAAE;EAC9B;EAEA1B,SAAS,CAAC,MAAM;IACd2B,OAAO,CAACC,GAAG,CAACpB,SAAS,CAAC,CAAC,CAAC;EAC1B,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,oBACEH,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAOyB,GAAG,EAAEV,WAAY;MAACW,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC;IAAU;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpEd,OAAA;MAAOyB,GAAG,EAAET,SAAU;MAACU,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC;IAAQ;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChEd,OAAA;MAAQ4B,OAAO,EAAEX,WAAY;MAAAO,QAAA,EAAC;IAAM;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC5CT,KAAK;EAAA;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACZ,EAAA,CArCuBD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}