{"ast":null,"code":"var _jsxFileName = \"/home/ak/Desktop/codebase/newreact/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const questionRef = useRef();\n  const answerRef = useRef();\n  function getQuestions() {\n    return questions;\n  }\n  function handleClick(e) {\n    if (questionRef.current.value == \"\" || answerRef.current.value == \"\") {\n      return;\n    }\n    const updatedQuestions = [...questions, {\n      id: questions.length,\n      question: questionRef.current.value,\n      answer: answerRef.current.value\n    }];\n    // React rerenders/updates everytime setQuestions is called\n    setQuestions(updatedQuestions);\n    // Clear input fields after submission\n    questionRef.current.value = '';\n    answerRef.current.value = '';\n  }\n  function handleClear(e) {\n    setQuestions([]);\n  }\n  const cards = questions.map(item => /*#__PURE__*/_jsxDEV(Card, {\n    question: item.question,\n    answer: item.answer\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this));\n  // useEffect(() => {\n  //   console.log(questions); // Log the questions array whenever it changes\n  // }, [questions]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: questionRef,\n      type: \"text\",\n      placeholder: \"Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: answerRef,\n      type: \"text\",\n      placeholder: \"Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClear,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), cards]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Cx2RJ7tyl4VglRwAzYySc6Nv8ts=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Card","jsxDEV","_jsxDEV","App","_s","questions","setQuestions","questionRef","answerRef","getQuestions","handleClick","e","current","value","updatedQuestions","id","length","question","answer","handleClear","cards","map","item","fileName","_jsxFileName","lineNumber","columnNumber","children","ref","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/ak/Desktop/codebase/newreact/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport Card from './Card'\n\nexport default function App() {\n  const [questions, setQuestions] = useState([]);\n\n  const questionRef = useRef();\n  const answerRef = useRef();\n\n  function getQuestions() {\n    return questions;\n  }\n\n  function handleClick(e) {\n    if (questionRef.current.value == \"\" || answerRef.current.value == \"\") {\n      return;\n    }\n    const updatedQuestions = [...questions, { id: questions.length, question: questionRef.current.value, answer: answerRef.current.value }];\n    // React rerenders/updates everytime setQuestions is called\n    setQuestions(updatedQuestions);\n    // Clear input fields after submission\n    questionRef.current.value = '';\n    answerRef.current.value = '';\n  }\n\n  function handleClear(e) {\n    setQuestions([]);\n\n  }\n  \n\n  const cards = questions.map(item => (\n    <Card \n      key={item.id}\n      question={item.question}\n      answer={item.answer}\n    />\n  ));\n  // useEffect(() => {\n  //   console.log(questions); // Log the questions array whenever it changes\n  // }, [questions]);\n\n  return (\n    <div>\n      <input ref={questionRef} type=\"text\" placeholder=\"Question\"></input>\n      <input ref={answerRef} type=\"text\" placeholder=\"Answer\"></input>\n      <button onClick={handleClick}>Submit</button>\n      <button onClick={handleClear}>Clear</button>\n      {cards}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,IAAI,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMS,WAAW,GAAGR,MAAM,CAAC,CAAC;EAC5B,MAAMS,SAAS,GAAGT,MAAM,CAAC,CAAC;EAE1B,SAASU,YAAYA,CAAA,EAAG;IACtB,OAAOJ,SAAS;EAClB;EAEA,SAASK,WAAWA,CAACC,CAAC,EAAE;IACtB,IAAIJ,WAAW,CAACK,OAAO,CAACC,KAAK,IAAI,EAAE,IAAIL,SAAS,CAACI,OAAO,CAACC,KAAK,IAAI,EAAE,EAAE;MACpE;IACF;IACA,MAAMC,gBAAgB,GAAG,CAAC,GAAGT,SAAS,EAAE;MAAEU,EAAE,EAAEV,SAAS,CAACW,MAAM;MAAEC,QAAQ,EAAEV,WAAW,CAACK,OAAO,CAACC,KAAK;MAAEK,MAAM,EAAEV,SAAS,CAACI,OAAO,CAACC;IAAM,CAAC,CAAC;IACvI;IACAP,YAAY,CAACQ,gBAAgB,CAAC;IAC9B;IACAP,WAAW,CAACK,OAAO,CAACC,KAAK,GAAG,EAAE;IAC9BL,SAAS,CAACI,OAAO,CAACC,KAAK,GAAG,EAAE;EAC9B;EAEA,SAASM,WAAWA,CAACR,CAAC,EAAE;IACtBL,YAAY,CAAC,EAAE,CAAC;EAElB;EAGA,MAAMc,KAAK,GAAGf,SAAS,CAACgB,GAAG,CAACC,IAAI,iBAC9BpB,OAAA,CAACF,IAAI;IAEHiB,QAAQ,EAAEK,IAAI,CAACL,QAAS;IACxBC,MAAM,EAAEI,IAAI,CAACJ;EAAO,GAFfI,IAAI,CAACP,EAAE;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGb,CACF,CAAC;EACF;EACA;EACA;;EAEA,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAO0B,GAAG,EAAErB,WAAY;MAACsB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC;IAAU;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpExB,OAAA;MAAO0B,GAAG,EAAEpB,SAAU;MAACqB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC;IAAQ;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChExB,OAAA;MAAQ6B,OAAO,EAAErB,WAAY;MAAAiB,QAAA,EAAC;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7CxB,OAAA;MAAQ6B,OAAO,EAAEZ,WAAY;MAAAQ,QAAA,EAAC;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC3CN,KAAK;EAAA;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtB,EAAA,CAhDuBD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}