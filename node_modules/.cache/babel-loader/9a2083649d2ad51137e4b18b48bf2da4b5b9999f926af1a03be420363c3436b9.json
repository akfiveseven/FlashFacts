{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akhan\\\\Desktop\\\\codebase\\\\AKxSalem\\\\src\\\\Select.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './style.css';\nimport CardList from './CardList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Select(_ref) {\n  _s();\n  let {\n    setList\n  } = _ref;\n  const sets = JSON.parse(localStorage.getItem('flashcardSets')) || [];\n  const [selectedOption, setSelectedOption] = useState('');\n  const [showResult, setShowResult] = useState(false); // State variable to control rendering\n\n  const handleChange = event => {\n    handleViewSet();\n    setSelectedOption(event.target.value);\n    setShowResult(false); // Reset the showResult state when the option changes\n  };\n\n  const handleViewSet = () => {\n    console.log(\"hey\");\n    const selectedSet = sets.find(set => set.name === selectedOption);\n    if (selectedSet) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CardList, {\n          questions: selectedSet.cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this);\n    } else {\n      return null;\n    }\n  };\n  const handleClick = () => {\n    setShowResult(true); // Set showResult to true when the button is clicked\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedOption,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select an option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), sets.map(set => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: set.name,\n        children: set.name\n      }, set.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Show Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), \" \", showResult && handleViewSet(), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Select, \"pxjxfOg6ghSFnxl1K0P3Cfkq5o8=\");\n_c = Select;\nvar _c;\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"names":["React","useState","Link","CardList","jsxDEV","_jsxDEV","Select","_ref","_s","setList","sets","JSON","parse","localStorage","getItem","selectedOption","setSelectedOption","showResult","setShowResult","handleChange","event","handleViewSet","target","value","console","log","selectedSet","find","set","name","children","questions","cards","fileName","_jsxFileName","lineNumber","columnNumber","handleClick","onChange","map","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/akhan/Desktop/codebase/AKxSalem/src/Select.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport CardList from './CardList';\r\n\r\nexport default function Select({ setList }) {\r\n  const sets = JSON.parse(localStorage.getItem('flashcardSets')) || [];\r\n\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n  const [showResult, setShowResult] = useState(false); // State variable to control rendering\r\n\r\n  const handleChange = (event) => {\r\n    handleViewSet();\r\n    setSelectedOption(event.target.value);\r\n    setShowResult(false); // Reset the showResult state when the option changes\r\n  };\r\n\r\n  const handleViewSet = () => {\r\n    console.log(\"hey\");\r\n    const selectedSet = sets.find((set) => set.name === selectedOption);\r\n    \r\n    if (selectedSet) {\r\n      return (\r\n        <div>\r\n          <CardList questions={selectedSet.cards} />\r\n        </div>\r\n      );\r\n    } else {\r\n        return null;\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  const handleClick = () => {\r\n    setShowResult(true); // Set showResult to true when the button is clicked\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <select value={selectedOption} onChange={handleChange}>\r\n        <option value=\"\">Select an option</option>\r\n        {sets.map((set) => (\r\n          <option key={set.id} value={set.name}>\r\n            {set.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <button onClick={handleClick}>Show Result</button> {/* Button to trigger rendering */}\r\n      {showResult && handleViewSet()} {/* Render the result of handleViewSet when showResult is true */}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAAc;EAAAC,EAAA;EAAA,IAAb;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EACxC,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,EAAE;EAEpE,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErD,MAAMkB,YAAY,GAAIC,KAAK,IAAK;IAC9BC,aAAa,CAAC,CAAC;IACfL,iBAAiB,CAACI,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;IACrCL,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;EACxB,CAAC;;EAED,MAAMG,aAAa,GAAGA,CAAA,KAAM;IAC1BG,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IAClB,MAAMC,WAAW,GAAGhB,IAAI,CAACiB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,KAAKd,cAAc,CAAC;IAEnE,IAAIW,WAAW,EAAE;MACf,oBACErB,OAAA;QAAAyB,QAAA,eACEzB,OAAA,CAACF,QAAQ;UAAC4B,SAAS,EAAEL,WAAW,CAACM;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC;IAEV,CAAC,MAAM;MACH,OAAO,IAAI;IACf;EACF,CAAC;EAID,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBnB,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EACvB,CAAC;;EAED,oBACEb,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAQkB,KAAK,EAAER,cAAe;MAACuB,QAAQ,EAAEnB,YAAa;MAAAW,QAAA,gBACpDzB,OAAA;QAAQkB,KAAK,EAAC,EAAE;QAAAO,QAAA,EAAC;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACzC1B,IAAI,CAAC6B,GAAG,CAAEX,GAAG,iBACZvB,OAAA;QAAqBkB,KAAK,EAAEK,GAAG,CAACC,IAAK;QAAAC,QAAA,EAClCF,GAAG,CAACC;MAAI,GADED,GAAG,CAACY,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAET/B,OAAA;MAAQoC,OAAO,EAAEJ,WAAY;MAAAP,QAAA,EAAC;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,KAAC,EAClDnB,UAAU,IAAII,aAAa,CAAC,CAAC,EAAC,GAAC;EAAA;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV;AAAC5B,EAAA,CAhDuBF,MAAM;AAAAoC,EAAA,GAANpC,MAAM;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}